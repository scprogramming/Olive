<!DOCTYPE html>
<html>
  <head>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/katex@0.16.0/dist/katex.min.css" integrity="sha384-Xi8rHCmBmhbuyyhbI88391ZKP2dmfnOl4rT9ZfRI7mLTdk1wblIUnrIq35nqwEvC" crossorigin="anonymous">
    <link rel="stylesheet" href="/public/sidebar.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet" href="/public/addPage.css">
    
  </head>

  <body>

    <div class="page-container">
      <div class="content-wrap">
          <div class="row">
              <%- include('navbar.ejs'); %>
          </div>
          <div class="row">
              <div class="col-2">
                  <%- include('sidebar.ejs'); %>
              </div>
              <div class="col-8">
                <%- include('pageModals.ejs'); %>
                <input type="text" class="form-control" id="pageTitle">          
                <button class="btn btn-primary" onclick="savePage()">Save Title</button>
                <div id="pageContent">
                  <% for (var i = 0; i < content.length; i++){ %>
                    <%- content[i].content %>
                  <%}%>
                </div>
                <button class="btn btn-primary" data-toggle="modal" data-target="#addHero" onclick="document.getElementById('hero_mode').innerHTML='add';">Primary Button</button>
              </div>
            </div>
      </div>
  </div>

  
</body>
 
<script>

  console.log(<%= pageId %>);

  function sanitizeContent(content,type){
    switch(type){
      case "hero":
        //Need to have block ID before all this happens
        content.querySelector('#mainHeading').id = "mainHeadingUnique";
        return content;
    }
  }

    function updateAndSave(contentTarget,formContent,mode,editId,type){
        console.log(mode);
        
        switch (mode){
          case 'add':
              
              let content = document.querySelector(`#${contentTarget}`);

              addBlock(sanitizeContent(content,type));
            clearFormPre(formContent,contentTarget);
            break;

          case 'edit':
            let newContent = document.getElementById(contentTarget).innerHTML;
            document.getElementById(editId).innerHTML = newContent;

            savePage();
            clearFormPre(formContent, contentTarget);
            break;

        }
        

    }

    async function updateContent(res,content){
      let result = await res.json();
      console.log(content);
      document.getElementById("pageContent").innerHTML += `
            <div class="buttonOverlay">
              <a onclick="editBlock('hero','block${result.block_id}');"><i class="fa fa-edit"></i></button></a>  
            </div>
            <div id="block${result.block_id}">` + content.innerHTML + `</div>`;
    }

    function addBlock(content){

      fetch('<%= url %>:<%= port %>/api/addBlock', {
                method:'POST',
                headers: {
                    "Content-Type": "application/json"
                },
                credentials: 'include',
                body:JSON.stringify({content_id:<%= contentId %>, content:content.innerHTML,order:0})
                
            }).then(res => updateContent(res,content));
    }

    function editBlock(editType,id){
      switch(editType){
        case 'hero':
          document.getElementById("id_hero_hidden").innerHTML = id
          document.getElementById("hero_mode").innerHTML = "edit";

          document.getElementById('pageHeading').innerHTML = document.getElementById(`hero-block${id}`).getElementById('mainHeading').innerHTML;
          $("#addHero").modal();
          break;
      }
    }

    function savePage(){

        let title = document.getElementById("pageTitle").value;
        let data = document.getElementById("pageContent");
        let buttons = data.getElementsByClassName('buttonOverlay');

        for (let i = 0; i < buttons.length; i++){
          buttons.item(i).remove();
        }

        data = data.innerHTML;

        let id = location.pathname.substring(location.pathname.lastIndexOf('/') + 1);

        fetch('<%= url %>:<%= port %>/api/editPage', {
                method:'POST',
                headers: {
                    "Content-Type": "application/json"
                },
                credentials: 'include',
                body:JSON.stringify({page_id:id, title:title,data:data,page_path:""})
                
            });
    }

    function clearForm(formContent,previewContent){
      document.getElementById(formContent).reset();
      for (let i = 0; i < previewContent.length; i++){
        document.getElementById(previewContent[i]).innerHTML = "";
      }
      
    }

    function updateText(target,textIn){
        document.getElementById(target).innerText = textIn
    }

</script>


</html>